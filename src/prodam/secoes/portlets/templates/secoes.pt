<tal:master define="level options/level|python:0;
                    children options/children | nothing;
                    bottomLevel options/bottomLevel | nothing;"
            i18n:domain="plone">

  <metal:main define-macro="nav_main">

    <tal:navitem repeat="node children">
      <tal:teste tal:define="show_children node/show_children;
                children        node/children;
                item_url        node/getURL;
                item_remote_url node/getRemoteUrl;
                use_remote_url  node/useRemoteUrl | nothing;
                item_icon       nocall:node/item_icon;
                item_type       node/portal_type;
                is_current      node/currentItem;
                is_in_path      node/currentParent;
                li_class        python:is_current and ' navTreeCurrentNode' or '';
                li_extr_class   python:is_in_path and ' navTreeItemInPath' or '';
                li_folder_class python:show_children and ' navTreeFolderish' or '';
                normalizeString nocall: context/plone_utils/normalizeString;"
    tal:condition="python:bottomLevel &lt;= 0 or level &lt;= bottomLevel">

        <tal:level define="item_class string:topico;
                           item_type_class python:normalizeString(item_type);
                           item_class python:is_current and item_class + ' treeCurrentItem' or item_class;">

          <li class="" tal:attributes="class string:${node/id} ${item_type} ${item_class} ${li_extr_class} level${level}">

            <tal:notLink condition="python:item_type != 'Link'">
              <a tal:attributes="href python:use_remote_url and item_remote_url or item_url;
                                 title node/Description;
                                 class string:$item_class${li_class}${li_folder_class} $item_type_class">
                  <span tal:content="node/Title">Selected Item Title</span>
              </a>
            </tal:notLink>

            <tal:Link condition="python:item_type == 'Link'">
              <a tal:attributes="href python:item_remote_url;
                                 title node/Description;
                                 class string:$item_class${li_class}${li_folder_class} $item_type_class">
                  <span tal:content="node/Title">Selected Item Title</span>
              </a>
            </tal:Link>

            <tal:children condition="python: len(children) > 0 and level > 2">
              <ul tal:attributes="class python:'navTree navTreeLevel'+str(level)"
                  tal:condition="python: len(children) > 0 and show_children and bottomLevel and level < bottomLevel or True">
                  <span tal:replace="structure python:view.recurse(children=children, level=level+1, bottomLevel=bottomLevel)" />
              </ul>
            </tal:children>
          </li>

        </tal:level>
      </tal:teste>
    </tal:navitem>

    <tal:navitem repeat="node children">
      <tal:defines tal:define="show_children node/show_children;
                               children  node/children;"
                   tal:condition="python:bottomLevel &lt;= 0 or level &lt;= bottomLevel">

        <tal:children condition="python: len(children) > 0 and level < 3">
          <span tal:define="ajusta_level python:'</ul>'" tal:replace="structure ajusta_level" />
          <ul tal:attributes="class python:'navTree navTreeLevel'+str(level)"
              tal:condition="python: len(children) > 0 and show_children and bottomLevel and level < bottomLevel or True">
              <span tal:replace="structure python:view.recurse(children=children, level=level+1, bottomLevel=bottomLevel)" />
          </ul>
        </tal:children>
      </tal:defines>
    </tal:navitem>
    <div class="visualClear"><!-- --></div>
  </metal:main>
</tal:master>